apply plugin: 'maven'
apply plugin: 'osgi'
apply plugin: 'signing'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '2.4.0'
group = 'de.undercouch'
sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) { 
    options.compilerArgs << "-Xlint" 
} 

configurations {
    integrationTestBase
    integrationTest21 { extendsFrom integrationTestBase }
    integrationTest22 { extendsFrom integrationTestBase }
    integrationTest23 { extendsFrom integrationTestBase }
    integrationTest24 { extendsFrom integrationTestBase }
    integrationTest25 { extendsFrom integrationTestBase }
}

String jacksonCore = 'com.fasterxml.jackson.core:jackson-core:'
String jacksonAnnotations = 'com.fasterxml.jackson.core:jackson-annotations:'
String jacksonDatabind = 'com.fasterxml.jackson.core:jackson-databind:'
String junit = 'junit:junit:4.12'
String mongoDbJavaDriver = 'org.mongodb:mongo-java-driver:2.13.0'

dependencies {
    compile jacksonCore + '2.5.1'
    compile jacksonAnnotations + '2.5.1'
    compile jacksonDatabind + '2.5.1'

    testCompile junit
    testCompile mongoDbJavaDriver
    
    integrationTestBase junit
    integrationTestBase mongoDbJavaDriver
        
    integrationTest21 jacksonCore + '2.1.0'
    integrationTest21 jacksonAnnotations + '2.1.0'
    integrationTest21 jacksonDatabind + '2.1.0'
    
    integrationTest22 jacksonCore + '2.2.0'
    integrationTest22 jacksonAnnotations + '2.2.0'
    integrationTest22 jacksonDatabind + '2.2.0'
    
    integrationTest23 jacksonCore + '2.3.0'
    integrationTest23 jacksonAnnotations + '2.3.0'
    integrationTest23 jacksonDatabind + '2.3.0'
    
    integrationTest24 jacksonCore + '2.4.0'
    integrationTest24 jacksonAnnotations + '2.4.0'
    integrationTest24 jacksonDatabind + '2.4.0'

    integrationTest24 jacksonCore + '2.5.0'
    integrationTest24 jacksonAnnotations + '2.5.0'
    integrationTest24 jacksonDatabind + '2.5.0'
}

jar {
    // define OSGi bundle manifest
    manifest {
        name = 'bson4jackson'
        symbolicName = "de.undercouch.bson4jackson"
        vendor = 'Michel Kraemer'
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "de.undercouch.*;version=${version}"
    }
    
    // include license into jar
    from 'LICENSE.txt'
}

// initialize gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

// package javadoc into a jar file
task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// package source into a jar file
task packageSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task doIntegrationTest21(type: Test) {
    useJUnit {
        excludeCategories 'de.undercouch.bson4jackson.RequiresJackson_v2_3'
    }

    classpath = sourceSets.test.output + sourceSets.main.output + configurations.integrationTest21
}

task doIntegrationTest22(type: Test) {
    useJUnit {
        excludeCategories 'de.undercouch.bson4jackson.RequiresJackson_v2_3'
    }

    classpath = sourceSets.test.output + sourceSets.main.output + configurations.integrationTest22
}

task doIntegrationTest23(type: Test) {
    classpath = sourceSets.test.output + sourceSets.main.output + configurations.integrationTest23
}

task doIntegrationTest24(type: Test) {
    classpath = sourceSets.test.output + sourceSets.main.output + configurations.integrationTest24
}

task doIntegrationTest25(type: Test) {
    classpath = sourceSets.test.output + sourceSets.main.output + configurations.integrationTest25
}

task integrationTest(dependsOn: [ doIntegrationTest21, doIntegrationTest22,
        doIntegrationTest23, doIntegrationTest24, doIntegrationTest25])

check.dependsOn integrationTest

// define artifacts for upload
artifacts {
    archives jar
    archives packageJavadoc
    archives packageSources
}

// sign all artifacts
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    sign configurations.archives
}

// remove test dependencies from configuration-to-scope mapping
// this also removes them from the maven pom file
conf2ScopeMappings.mappings.remove(configurations.testCompile)

uploadArchives {
    repositories {
        mavenDeployer {
            // sign artifacts before upload
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            
            // upload to sonatype OSS
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            
            // pom file details
            pom.project {
               name 'bson4jackson'
               packaging 'jar'
               description 'A pluggable BSON generator and parser for Jackson JSON processor.'
               url 'http://www.michel-kraemer.com'
 
               scm {
                   url 'scm:git:git://github.com/michel-kraemer/bson4jackson.git'
                   connection 'scm:git:git://github.com/michel-kraemer/bson4jackson.git'
                   developerConnection 'scm:git:git://github.com/michel-kraemer/bson4jackson.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'michel-kraemer'
                       name 'Michel Kraemer'
                       email 'michel@undercouch.de'
                   }
               }
           }
        }
    }
}
